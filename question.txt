Question 1: Counting Characters
Write a function that takes a string as input and counts the occurrence of each character. Return the count of each character as a dictionary or map.
Example:
Input: "hello"
Output: {'h': 1, 'e': 1, 'l': 2, 'o': 1}

Question 2: Finding Duplicates
Write a function that takes an array of numbers as input and returns an array of any duplicate numbers found in the input array.
Example:
Input: [1, 2, 3, 4, 2, 5, 6, 3]
Output: [2, 3]

Question 3: Find the Longest Word in a String
Return the length of the longest word in the provided sentence.
Example:
findLongestWordLength("The quick brown fox jumped over the lazy dog");
Output: 6

solution
create function that takes in a string
convert string to array using split()
create longestWord variable and set it to 0
create for loop that loops through the array
if the length of the current word is greater than the longestWord variable
set longestWord to the length of the current word
return longestWord

Question 4: Return an array consisting of the largest number from each provided sub-array. For simplicity, the provided array will contain exactly 4 sub-arrays.
Example:
largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);

Output: [5, 27, 39, 1001]

solution
create function that takes in an array
create empty array
create for of loop that loops through the array
create variable that holds the largest number
Math.max(...subArr) to find the largest number
push the largest number into the empty array
return the array

Question 5: Check if a string (first argument, str) ends with the given target string (second argument, target).
Example:
confirmEnding("Bastian", "n") should return true.

Question 6: Repeat a given string str (first argument) for num times (second argument). Return an empty string if num is not a positive number. For the purpose of this challenge, do not use the built-in .repeat() method.
Example:
repeatStringNumTimes("*", 3) should return the string ***.